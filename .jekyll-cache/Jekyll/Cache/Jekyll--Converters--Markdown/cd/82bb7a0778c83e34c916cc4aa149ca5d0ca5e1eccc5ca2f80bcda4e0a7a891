I"V<style>
	h3{
		background-color:#D2D2FF;
		color: gray;
	}
</style>

<h2 id="1-mybatis-configxml파일이란">1. mybatis-config.xml파일이란?</h2>

<ul>
  <li>mybatis에 필요한 설정들을 기술하는 파일</li>
</ul>

<h3 id="1-mybatis-configxml-생성">1) mybatis-config.xml 생성</h3>
<ol>
  <li>Java Resources 아래 Source Folder 안에 위치</li>
  <li>DTD file로 생성</li>
  <li>environment 태그에 연동할 DB 정보 입력
 ```javaStript</li>
</ol>
<environments default="development">
	
    <environment id="development">
        
        <!-- 
            * transactionManager : JDBC와 MANAGED 둘 중 하나 선택할 수 있음
                - JDBC : 트랜잭션을 내가 직접 관리(수동 commit)
                - MANAGED : 트랜젝션에 대해 신경 X (자동 commit)
            -->
        <transactionManager type="JDBC" />
        
        
        <!-- 
            * dataSource는 POOLED와 UNPOOLED 둘 중 하나 선택 (ConnectionPool 사용 여부)
            
            >> connectionPool : Connection객체를 담아둘 수 있는 영역
                                한번 생성된 Connection 객체를 담아두면 재사용 가능
            - POOLED : 사용 O
            - UNPOOLED : 사용 x
            -->
        <dataSource type="POOLED">
            <property name="driver" value="oracle.jdbc.driver.OracleDriver" />
            <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
            <property name="username" value="mybatis" />
            <property name="password" value="mybatis" />
        </dataSource>
        
    </environment>
    
</environments>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> 
 |종류|설명|
 |:---:|:---:|
 |transactionManager|JDBC : 수동 commit / MANAGED : 자동 commit | 
 |dataSource|POOLED : ConnectionPool 사용 O / UNPOOLED : 사용 x |

### 2) 목적
   - 서로 호환되지 않는 데이터 타입을 사용하는 시스템 간의 데이터 교환은 시간이 많이 걸리고 데이터 손실도 발생함&lt;br&gt;
   =&gt; 데이터를 텍스트 형식으로 저장하여 os나 브라우저 등에 상관없이 독립적으로 데이터를 저장하고 서로 다른 주체간에 정보를 쉽게 전달할 수 있다.

### 3) 스키마
   - xml이 다른 언어를 정의하기 위해 해당 언어의 필요 요소와 속성 정보를 모아놓은 것
   - 작성방법 : DTD / XSD&lt;br&gt;
 
#### (1)DTD(Document Type Definition)
   - XML문서의 구조 및 해당 문서에서 사용할 엔티티 등을 정의함
   - 문서 내부 명시 또는 별도의 파일로 분리
   - 데이터 교환의 표준으로써 활용되거나 XML문서의 구문 및 구조에 대한 유효셩 검사 가능
   - `&lt;!DOCTYPE 루트요소 DTD식별자 [ 선언1 선언2 ... ]&gt;`
&lt;br&gt;&lt;br&gt;

## 2. mapper.xml
### 1) XML과 DTD 선언
```javaScript
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;
</code></pre></div></div>

<h3 id="2--작성">2) <mapper> 작성</mapper></h3>
<ul>
  <li>SQL mapper의 루트 엘리먼트로 모든 SQL문은 mapper 안에 기술함</li>
  <li>namespace : 해당 mapper파일의 고유한 별칭 등록</li>
</ul>

<h3 id="3-select-insert-update-delete">3) select, insert, update, delete</h3>
<h4 id="1-dml문">(1) DML문</h4>
<p><code class="language-plaintext highlighter-rouge">&lt;insert|update|delete id="식별자" [parameterType="전달받을자바타입(패키지포함풀클래스명)|별칭"]&gt; &lt;/insert|update|delete&gt;</code></p>
<ul>
  <li>실행결과가 int이므로 result속성이 필요 X</li>
</ul>

<pre><code class="language-javaScript">&lt;update id="increaseCount" parameterType="_int"&gt;
    update
            board
        set count = count+1
        where board_no = #{boardNo}
        and status = 'Y'
&lt;/update&gt;
</code></pre>

<table>
  <thead>
    <tr>
      <th style="text-align: center">종류</th>
      <th style="text-align: center">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">id</td>
      <td style="text-align: center">해당 SQL문의 구분자(고유 이름)</td>
    </tr>
    <tr>
      <td style="text-align: center">parameterType</td>
      <td style="text-align: center">구문에 전달된 파라미터의 전체 클래스명이나 별칭</td>
    </tr>
  </tbody>
</table>

<h4 id="2-select문">(2) SELECT문</h4>
<p><code class="language-plaintext highlighter-rouge">&lt;select id="식별자" [parameterType="전달받을자바타입(패키지포함풀클래스명)|별칭"] resultType="조회결과반환하고자하는자바타입" | resultMap="조회결과를뽑아서mapping할resultMap의 id"&gt; &lt;/select&gt;</code></p>

<pre><code class="language-javaScript">&lt;select id="selectListCount" resultType="_int"&gt;
    select
           count(*)
      from board
     where status = 'Y'
&lt;/select&gt;
</code></pre>

<table>
  <thead>
    <tr>
      <th style="text-align: center">종류</th>
      <th style="text-align: center">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">resultType</td>
      <td style="text-align: center">select문 실행 결과를 담을 객체</td>
    </tr>
    <tr>
      <td style="text-align: center">resultMap</td>
      <td style="text-align: center">select문 실행 결과를 담을 객체를 resultMap으로 지정, 따로 선언해야함</td>
    </tr>
  </tbody>
</table>

<h4 id="--resultmap">- resultMap</h4>
<ul>
  <li>sql컬럼값과 vo객체의 필드값을 매핑시키는 역할로 <strong>마이바티스의 핵심 기능</strong></li>
  <li>데이터가 있으면 뽑아서 넣고 없으면 말고</li>
</ul>

<pre><code class="language-javaScript">&lt;resultMap id="replyResultSet" type="Reply"&gt;
    &lt;result column="reply_no" property="replyNo" /&gt;
    &lt;result column="user_id" property="replyWriter" /&gt;
    &lt;result column="reply_content" property="replyContent" /&gt;
    &lt;result column="create_date" property="createDate" /&gt;
&lt;/resultMap&gt;

&lt;select id="selectReplyList" resultMap="replyResultSet" parameterType="reply"&gt;
    select
            reply_no
            , reply_content
        from reply r
        join member on (reply_writer=user_no)
        where ref_bno = #{boardNo}
&lt;/select&gt;
</code></pre>

<h4 id="--">- #{}</h4>
<ul>
  <li>PreparedStatement를 만들어서 파라미터에 값을 세팅하기 위한 문법</li>
  <li>'’가 자동 삽입되면서 String 형태로 값이 들어감</li>
</ul>

<h3 id="3-mybatis-configmxl에-해당-mapper-파일-등록">3) mybatis-config.mxl에 해당 mapper 파일 등록</h3>
<ul>
  <li>mapper 태그 이용</li>
</ul>

<pre><code class="language-javaStript">&lt;mappers&gt;
    &lt;mapper resource="/mappers/board-mapper.xml" /&gt;
&lt;/mappers&gt;
</code></pre>

<h4 id="출처">출처</h4>

<ul>
  <li>수업자료</li>
  <li><a href="https://www.w3schools.com/">w3schools</a></li>
  <li><a href="https://mybatis.org/mybatis-3/ko/getting-started.html">마이바티스 공식문서</a></li>
</ul>

:ET