I"
<style>
	h3{
		background-color:#D2D2FF;
		color: gray;
	}
</style>

<h2 id="ajax란">Ajax란?</h2>
<ul>
  <li>Asynchronous JavaScript and XML의 약자</li>
  <li>자바스크립트를 이용하여 서버에 <strong>비동기 방식</strong>으로 데이터를 요청함</li>
  <li>페이지의 일부분만을 로딩 가능</li>
</ul>

<h3 id="비동기-방식이란">비동기 방식이란?</h3>
<ul>
  <li>웹페이지 리로드 없이 데이터를 출력 =&gt; 서버 요청 후에도 프로그램이 계속 돌고 있음</li>
  <li>필요한 부분만 갱신되므로 리소스 낭비가 적음</li>
</ul>

<h3 id="1-장단점">1. 장단점</h3>
<h4 id="1-장점">1) 장점</h4>
<ul>
  <li>웹 페이지 일부만 갱신 가능 =&gt; 속도 향상</li>
  <li>서버 처리가 완료되기 전에 해당 페이지에서 다른 요청 처리 가능</li>
  <li>다양한 UI 가능</li>
</ul>

<h4 id="2-단점">2) 단점</h4>
<ul>
  <li>히스토리 X</li>
  <li>연속으로 데이터 요청시 서버 부하 증가</li>
  <li>페이지 이동이 없으므로 보안상 문제가 있음</li>
  <li><code class="language-plaintext highlighter-rouge">$.ajax({속성명:속성값, 속성명:속성값...});</code></li>
</ul>

<h3 id="2-ajax-통신-순서">2. Ajax 통신 순서</h3>
<h4 id="1-http-request-객체-생성">1) HTTP request 객체 생성</h4>
<h4 id="2-서버에-요청">2) 서버에 요청</h4>
<ul>
  <li>open()과 send() 메소드
    <ol>
      <li>open() 메소드</li>
    </ol>
    <ul>
      <li>서버로 보낼 Ajax 요청의 형식을 설정(get/post)</li>
      <li><code class="language-plaintext highlighter-rouge">open(전달방식, URL주소, 동기여부);</code>
     2. send() 메소드</li>
      <li>작성된 ajax 요청을 서버로 전달</li>
      <li><code class="language-plaintext highlighter-rouge">send();</code> 또는 <code class="language-plaintext highlighter-rouge">send(문자열);</code></li>
    </ul>
  </li>
</ul>

<h4 id="3-서버-응답-확인-및-처리">3) 서버 응답 확인 및 처리</h4>
<ol>
  <li>응답 데이터 확인
    <ul>
      <li>텍스트 파일인 경우 responseText : 응답데이터를 문자열로 반환</li>
      <li>XML 데이터인 경우 responseXML : 응답데이터를 XML DOM 객체로 반환</li>
    </ul>
  </li>
</ol>

<h3 id="3-메소드">3. 메소드</h3>

<h4 id="출처">출처</h4>

<ul>
  <li>수업자료</li>
  <li><a href="https://www.w3schools.com/">w3schools</a></li>
  <li><a href="http://tcpschool.com/ajax/ajax_intro_basic">tcpschool/</a></li>
</ul>

:ET